version: "3.9"

services:

  redis:
    container_name: redis
    image: redis
    restart: always
    expose:
      - "6379"
    command: redis-server --save 60 1 --loglevel warning

  db:
    container_name: db
    image: postgres:alpine
    volumes:
      - ./postgre/data:/var/lib/postgresql/data
    expose:
      - "5432"
    env_file:
      - ./envs/dev/postgre/.env
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: dockerfiles/dev/django/Dockerfile
    container_name: backend
    command: sh -c "python manage.py check_database && \
                    yes | python manage.py makemigrations  && \
                    yes | python manage.py migrate  && \
                    python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./core:/usr/src/app
    ports:
      - "8000:8000"
    env_file:
      - ./envs/dev/django/.env
    restart: always
    depends_on:
      - db

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"      # پورت ارتباطی اصلی
      - "15672:15672"    # پورت رابط کاربری مدیریت (Management UI)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: always

  celery_worker:
    build:
      context: .
      dockerfile: dockerfiles/dev/django/Dockerfile
    command: celery -A core worker --loglevel=info
    container_name: weather-celery_worker
    volumes:
      - ./core:/usr/src/app
    env_file:
      - ./envs/dev/django/.env
    restart: always
    depends_on:
      - redis
      - db
      - backend
      - rabbitmq

  celery_beat:
    build:
      context: .
      dockerfile: dockerfiles/dev/django/Dockerfile
    command: celery -A core beat -l info
    container_name: weather-celery_beat
    volumes:
      - ./core:/usr/src/app
    env_file:
      - ./envs/dev/django/.env
    restart: always
    depends_on:
      - redis
      - db
      - backend
      - rabbitmq

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - "5000:80"
      - "25:25"
      - "143:143"
    volumes:
      - smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions__HostName=smtp4dev

volumes:
  smtp4dev-data:
